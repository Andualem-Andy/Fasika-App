version: '3.8'

services:
  db:
    image: postgres:13
    restart: unless-stopped
    env_file: ./fasika-backend2/.env
    environment:
      POSTGRES_DB: strapi_prod
      POSTGRES_USER: strapi_prod
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U strapi_prod -d strapi_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./fasika-backend2
      args:
        NODE_ENV: production
    restart: unless-stopped
    env_file: ./fasika-backend2/.env
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: postgres
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi_prod
      DATABASE_USERNAME: strapi_prod
      DATABASE_PASSWORD: ${DB_PASSWORD}
      DATABASE_SSL: "false"
    volumes:
      - ./fasika-backend2/public/uploads:/app/public/uploads
      - ./fasika-backend2/config:/app/config
    ports:
      - "1337:1337"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:1337/admin || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: ./fasika-frontend
      args:
        NODE_ENV: production
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_STRAPI_URL: http://backend:1337
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data: